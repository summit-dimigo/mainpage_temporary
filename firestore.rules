// Firestore Security Rules
// 이 파일의 내용을 Firebase Console > Firestore Database > Rules에 복사하세요

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 프로필 컬렉션 규칙
    match /users/{userId} {
      // 인증된 사용자가 자신의 데이터만 읽고 쓸 수 있도록 허용
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // 프로필 생성 시 추가 검증
      allow create: if request.auth != null 
                    && request.auth.uid == userId
                    && resource == null  // 문서가 존재하지 않는 경우에만 생성 허용
                    && isValidUserProfile(request.resource.data);
      
      // 프로필 업데이트 시 추가 검증
      allow update: if request.auth != null 
                    && request.auth.uid == userId
                    && resource != null  // 문서가 존재하는 경우에만 업데이트 허용
                    && isValidUserUpdate(request.resource.data);
    }
    
    // 기본적으로 모든 다른 문서는 접근 거부
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// 사용자 프로필 데이터 유효성 검사 함수
function isValidUserProfile(data) {
  return data.keys().hasAll(['uid', 'email', 'name', 'level', 'experience', 'cash', 'stockHoldings', 'totalAssets', 'totalTrades', 'profitLoss', 'winRate', 'createdAt', 'lastLoginAt', 'updatedAt'])
         && data.uid is string
         && data.email is string  
         && data.name is string
         && data.level is number
         && data.level >= 1
         && data.experience is number
         && data.experience >= 0
         && data.cash is number
         && data.cash >= 0
         && data.stockHoldings is list
         && data.totalAssets is number
         && data.totalAssets >= 0
         && data.totalTrades is number
         && data.totalTrades >= 0
         && data.profitLoss is number
         && data.winRate is number
         && data.winRate >= 0
         && data.winRate <= 100;
}

// 사용자 프로필 업데이트 데이터 유효성 검사 함수
function isValidUserUpdate(data) {
  // 업데이트 시에는 모든 필드가 필수는 아니지만, 있다면 유효해야 함
  return (!('level' in data) || (data.level is number && data.level >= 1))
         && (!('experience' in data) || (data.experience is number && data.experience >= 0))
         && (!('cash' in data) || (data.cash is number && data.cash >= 0))
         && (!('stockHoldings' in data) || data.stockHoldings is list)
         && (!('totalAssets' in data) || (data.totalAssets is number && data.totalAssets >= 0))
         && (!('totalTrades' in data) || (data.totalTrades is number && data.totalTrades >= 0))
         && (!('profitLoss' in data) || data.profitLoss is number)
         && (!('winRate' in data) || (data.winRate is number && data.winRate >= 0 && data.winRate <= 100));
}
